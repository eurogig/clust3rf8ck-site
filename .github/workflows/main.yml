# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on create events with new tags (only on new episode)
  push:
    tags:
    - '*'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        with:
          platforms: arm64
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1      
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - 
        name: Get Tag
        id: get-latest-tag
        run: |
          latest_tag=$(git describe --abbrev=0 --tags)
          echo "::set-output name=tag::${latest_tag}"
      -
        name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          file: clust3rf8ck/Dockerfile
          push: true
          tags: eurogig/clust3rf8ck:${{ steps.get-latest-tag.outputs.tag }}
      -
        name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
      - name: Update deployment
        uses: fjogeleit/yaml-update-action@master
        with:
          valueFile: 'clust3rf8ck/clust3f8ck.yaml'
          propertyPath: 'spec.template.spec.containers.image'
          value: eurogig/clust3rf8ck@${{ steps.docker_build.outputs.digest }}
          createPR: true
          branch: deployment
          targetBranch: main         
          message: 'Update Image SHA to ${{ steps.docker_build.outputs.digest }}' 
