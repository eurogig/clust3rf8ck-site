apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: clust3rf8ck
  name: clust3rf8ck
  namespace: clust3rf8ck
spec:
  replicas: 2
  selector:
    matchLabels:
      app: clust3rf8ck
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: clust3rf8ck
      annotations:
        seccomp.security.alpha.kubernetes.io/pod: "docker/default" 
    spec:
      containers:
      - image: eurogig/clust3rf8ck@sha256:416261d24b66dd1d463963b9f799b8ddacc06986c55e13c8f014649d3f13f7d4
        name: clust3rf8ck
        imagePullPolicy: Always
        resources:
          limits:
            cpu: "1"
            memory: "200Mi"
          requests:
            cpu: "0.5"
            memory: "100Mi"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - "[ -f /var/run/nginx.pid ] && ps -A | grep nginx"
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            scheme: HTTP
            path: /index.html
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
        securityContext:
          readOnlyRootFilesystem: true
          allowPrivilegeEscalation: false
          capabilities:
            drop:
              - ALL
              - NET_RAW
        volumeMounts:
        - mountPath: /var/cache/nginx
          name: cache-volume
        - mountPath: /var/run
          name: pid-volume          
      automountServiceAccountToken: false
      securityContext:
        runAsNonRoot: true
        runAsUser: 101
        runAsGroup: 101        
      volumes:
      - name: cache-volume
        emptyDir: {}
      - name: pid-volume
        emptyDir: {}
status: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    app: clust3rf8ck
  name: cflb
  namespace: clust3rf8ck
spec:
  ports:
  - name: 80-80
    port: 80
    protocol: TCP
    targetPort: 8080
  selector:
    app: clust3rf8ck
  type: LoadBalancer
status:
  loadBalancer: {}
